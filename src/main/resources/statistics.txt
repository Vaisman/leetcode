Solved:

2018:
Mar
 24 - 21,
 31 - 382, 447 t = O(n), s = O(1)

Apr
 1 - 646
 2 - 382
 4 - 3 (n), 5 (n2)
 5 - 11, 17 array mapping, rec, iter, 19
 6 - 33, 34, 48(careful with steps), 56
 8 - 142
 10 - 200
 18 - 322!!, 647 Expand Around Center, mention Manchester
 20 - 31, 49
 23 - 55 (top-down and bottom-up good example), 64 (O(n) memory), 78, 79, 105! (rec + it!!!)
 24 - 139, 215(Quick sort repeat), 621!!, 494
 25 - 416 (bottom-up!), 34 (rec and stack)

May
 02 - 394, 309, 300 (dp with binary search)
 03 - 406, 215, 148(merge sort)
 04 - 240, 221 (dp O(n) !), 279!
 09 - 53 (dp)
 10 - 322!! - the same like 297!, 152, 560, 621
 11 - 814, 540, 419
 13 - 304! (dp)
 18 - 797! (dp)
 21 - 813!! (dp) and check 139!! (dp)
 24 - 16, 611, 341, 516(dp)
 25 - 540, 739
 29 - 222, 662, 374

June
 04 - 791
 06 - 583 (dp)
 07 - 72 (dp) look like 583
 14 - 378, 650(dp), 201
 18 - 760
 19 - 695!, 303!, 119, 246
 20 - 276(dp), 359, 266, 346, 689, 482, 408
 21 - 422, 270, 800(round hex!)
 22 - 734, 447, 840, 604, 157, 252
 23 - 256(dp)
 24 - 459, 544, 890

July
 03 - 22!(bt)
 16 - 652!
 17 - 646(dp)
 27 - 842!(backtrack), 397, 318, 187, 145

Aug
 15 - 884
 21 - 819
 28 - 39(bt)

Sep
 12 - 133, 785
 21 - 289, 92, 227, 722, 143
 24 - 402, 683, 307, 299
 25 - 80, 852, 676, 369, 250, 280
 26 - 362, 549, 692, 752!!, 742 (BackMap!!), 817, 241, 247, 162
 27 - 806, 496!! stack, 846

Oct
 02 - 486, 701, 723(sliding window), 348, 863
 03 - 288, 444!!, 130, 163, 845, 792, 277, 528, 228, 392, 271
 04 - 524, 835, 853
 08 - 343(dp)
 09 - 714, 120(dp), 413(dp), 712(dp), 357(dp), 377(dp)
 10 - 76 (sliding window), 32
 11 - 312(dp), 207(topological sort) !!, 153, 735
 12 - 249, 137, 360, 533, 807
 17 - 921
 19 - 366, 370, 841, 399!!

Nov
 14 - 170

Dec

2019:
Jan
 04 - 965

Feb
Mar
Apr
May

Done with help:
 easy
  21 - iterator
  35 - see constrain
  125 - isLetterOrDigit
  101 - rec and non rec (exit condition)
  226 - bfs
  235 - point on value
  268 - use index
  405 - shift 4 and array
  401 - bits count function, t - constraint
  38 !
  696 !
  448 !
  160 169 171 172 198 110 190 202 118 121
  783 687 717 783 438 219 371 501 455


 medium
  94 - stack
  89 - x ^ x >> 1 (gray code)
  73 - const memory
  62 - non recursion !
  39 - remove
  2 - leading zero, non rec
  15 - corner 3, need write, sort !
  338 - non rec
  22 46 91 96! 513
  337! - [r, not r]
  216 - remove
  331 - dif calculation
  449 - deserialize (all in q)
  451 - need write
  150 - stack
  287 - dfs
  260 - small bit a & -a

 hard
  218!

Repeat:
 easy - 50
 medium - 20
 hard - 10

Backtracking general
https://leetcode.com/problems/subsets/discuss/27281/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partitioning)

Salary negotiation
https://softwareengineeringdaily.com/2016/07/11/salary-negotiation-with-haseeb-qureshi/

Behaviour:
 https://www.youtube.com/watch?v=PJKYqLP6MRE

Design:
 https://www.youtube.com/watch?v=ZgdS0EUmn70

Design pattern:
 Features:
 Estimation:
 Design Goals:
 Skeleton of the design:
 Deep Dive:
 Optimization:


!REPEAT!
276. Paint Fence https://www.youtube.com/watch?v=deh7UpSRaEY
TernarySearch
606. Construct String from Binary Tree

